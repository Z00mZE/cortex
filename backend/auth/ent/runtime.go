// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Z00mZE/cortex/backend/auth/ent/schema"
	"github.com/Z00mZE/cortex/backend/auth/ent/session"
	"github.com/Z00mZE/cortex/backend/auth/ent/user"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescSessionID is the schema descriptor for session_id field.
	sessionDescSessionID := sessionFields[1].Descriptor()
	// session.DefaultSessionID holds the default value on creation for the session_id field.
	session.DefaultSessionID = sessionDescSessionID.Default.(func() uuid.UUID)
	// sessionDescIP is the schema descriptor for ip field.
	sessionDescIP := sessionFields[6].Descriptor()
	// session.IPValidator is a validator for the "ip" field. It is called by the builders before save.
	session.IPValidator = sessionDescIP.Validators[0].(func(string) error)
	// sessionDescCreatedAt is the schema descriptor for created_at field.
	sessionDescCreatedAt := sessionFields[8].Descriptor()
	// session.DefaultCreatedAt holds the default value on creation for the created_at field.
	session.DefaultCreatedAt = sessionDescCreatedAt.Default.(func() time.Time)
	// sessionDescLastActivityAt is the schema descriptor for last_activity_at field.
	sessionDescLastActivityAt := sessionFields[9].Descriptor()
	// session.DefaultLastActivityAt holds the default value on creation for the last_activity_at field.
	session.DefaultLastActivityAt = sessionDescLastActivityAt.Default.(func() time.Time)
	// session.UpdateDefaultLastActivityAt holds the default value on update for the last_activity_at field.
	session.UpdateDefaultLastActivityAt = sessionDescLastActivityAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescActive is the schema descriptor for active field.
	userDescActive := userFields[3].Descriptor()
	// user.DefaultActive holds the default value on creation for the active field.
	user.DefaultActive = userDescActive.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[5].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}
